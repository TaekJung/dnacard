{"ast":null,"code":"import { formatAbiItem } from '../abi/formatAbiItem.js';\nimport { extractFunctionName, extractFunctionParams } from '../contract/extractFunctionParts.js';\nexport const getFunctionSignature = fn => {\n  if (typeof fn === 'string') {\n    const name = extractFunctionName(fn);\n    const params = extractFunctionParams(fn) || [];\n    return `${name}(${params.map(({\n      type\n    }) => type).join(',')})`;\n  }\n  return formatAbiItem(fn);\n};","map":{"version":3,"names":["formatAbiItem","extractFunctionName","extractFunctionParams","getFunctionSignature","fn","name","params","map","type","join"],"sources":["/Users/KTJ/bv_connect_contract_frontend/node_modules/viem/utils/hash/getFunctionSignature.ts"],"sourcesContent":["import type { AbiFunction } from 'abitype'\n\nimport { formatAbiItem } from '../abi/formatAbiItem.js'\nimport {\n  extractFunctionName,\n  extractFunctionParams,\n} from '../contract/extractFunctionParts.js'\n\nexport const getFunctionSignature = (fn: string | AbiFunction) => {\n  if (typeof fn === 'string') {\n    const name = extractFunctionName(fn)\n    const params = extractFunctionParams(fn) || []\n    return `${name}(${params.map(({ type }) => type).join(',')})`\n  }\n\n  return formatAbiItem(fn)\n}\n"],"mappings":"AAEA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SACEC,mBAAmB,EACnBC,qBAAqB,QAChB,qCAAqC;AAE5C,OAAO,MAAMC,oBAAoB,GAAIC,EAAwB,IAAI;EAC/D,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;IAC1B,MAAMC,IAAI,GAAGJ,mBAAmB,CAACG,EAAE,CAAC;IACpC,MAAME,MAAM,GAAGJ,qBAAqB,CAACE,EAAE,CAAC,IAAI,EAAE;IAC9C,OAAO,GAAGC,IAAI,IAAIC,MAAM,CAACC,GAAG,CAAC,CAAC;MAAEC;IAAI,CAAE,KAAKA,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG;;EAG/D,OAAOT,aAAa,CAACI,EAAE,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}