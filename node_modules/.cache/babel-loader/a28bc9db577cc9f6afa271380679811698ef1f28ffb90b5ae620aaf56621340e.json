{"ast":null,"code":"var _jsxFileName = \"/Users/KTJ/blockV/bv_connect_contract_frontend/src/pages/Main.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Wallet } from \"../components/wallet\";\nimport { MintAndTransfer } from \"./MintAndTransfer\";\nimport { useConnect } from \"wagmi\";\nimport styledMain from 'styled-components';\nconst MainContainer = styledMain.div`\n  width: 100vw; \n  min-height: 100vh; \n  display: flex;\n  flex-direction: column;\n  align-items: center; \n  justify-content: center; \n  background-color: #f7f7f7;\n  gap: 20px;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/QggmlgpTq7ZCI-V9EPCDJzzuADc=/0x0:1205x798/1400x1400/filters:focal(513x122:743x352):format(png)/cdn.vox-cdn.com/uploads/chorus_image/image/55474493/Screen_Shot_2017_06_27_at_1.05.21_PM.0.png');\n  background-position: center;\n  background-size: cover;\n`;\n_c = MainContainer;\nexport const Main = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(WalletName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MintAndTransfer, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"LzGhSkswLn6Y57C8gja4ikfWqZ8=\");\n_c2 = Main;\nfunction WalletName() {\n  _s2();\n  //어떤 wallet에 연결되었는지를 보여줌.\n  const {\n    connect,\n    connectors,\n    error,\n    isLoading,\n    pendingConnector\n  } = useConnect();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [connectors.map(connector => /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !connector.ready,\n      onClick: () => connect({\n        connector\n      }),\n      children: [connector.name, !connector.ready && \" (unsupported)\", isLoading && connector.id === (pendingConnector === null || pendingConnector === void 0 ? void 0 : pendingConnector.id) && \" (connecting)\"]\n    }, connector.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s2(WalletName, \"NlhinP3KpyiD9Y4qwki+AsEjd78=\", false, function () {\n  return [useConnect];\n});\n_c3 = WalletName;\nimport { WalletConnectConnector } from 'wagmi/connectors/walletConnect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst connector = new WalletConnectConnector({\n  options: {\n    projectId: '...',\n    metadata: {\n      name: 'wagmi',\n      description: 'my wagmi app',\n      url: 'https://wagmi.sh',\n      icons: ['https://wagmi.sh/icon.png']\n    }\n  }\n});\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"WalletName\");","map":{"version":3,"names":["useState","Wallet","MintAndTransfer","useConnect","styledMain","MainContainer","div","_c","Main","_s","account","setAccount","_jsxDEV","children","WalletName","fileName","_jsxFileName","lineNumber","columnNumber","_c2","_s2","connect","connectors","error","isLoading","pendingConnector","map","connector","disabled","ready","onClick","name","id","message","_c3","WalletConnectConnector","jsxDEV","options","projectId","metadata","description","url","icons","$RefreshReg$"],"sources":["/Users/KTJ/blockV/bv_connect_contract_frontend/src/pages/Main.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Wallet } from \"../components/wallet\";\nimport { MintAndTransfer } from \"./MintAndTransfer\";\nimport { useConnect } from \"wagmi\";\nimport styledMain from 'styled-components';\n\nconst MainContainer = styledMain.div`\n  width: 100vw; \n  min-height: 100vh; \n  display: flex;\n  flex-direction: column;\n  align-items: center; \n  justify-content: center; \n  background-color: #f7f7f7;\n  gap: 20px;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/QggmlgpTq7ZCI-V9EPCDJzzuADc=/0x0:1205x798/1400x1400/filters:focal(513x122:743x352):format(png)/cdn.vox-cdn.com/uploads/chorus_image/image/55474493/Screen_Shot_2017_06_27_at_1.05.21_PM.0.png');\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const Main = () => {\n  const [account, setAccount] = useState(\"\");\n\n  return (\n    <MainContainer>\n      <WalletName />\n      <Wallet account={account} setAccount={setAccount}></Wallet>\n      <MintAndTransfer\n        account={account}\n        setAccount={setAccount}\n      ></MintAndTransfer>\n    </MainContainer>\n  );\n};\n\n\nfunction WalletName() {\n  //어떤 wallet에 연결되었는지를 보여줌.\n  const { connect, connectors, error, isLoading, pendingConnector } =\n    useConnect();\n\n  return (\n    <div>\n      {connectors.map((connector) => (\n        <button\n          disabled={!connector.ready}\n          key={connector.id}\n          onClick={() => connect({ connector })}\n        >\n          {connector.name}\n          {!connector.ready && \" (unsupported)\"}\n          {isLoading &&\n            connector.id === pendingConnector?.id &&\n            \" (connecting)\"}\n        </button>\n      ))}\n\n      {error && <div>{error.message}</div>}\n    </div>\n  );\n}\n\n\nimport { WalletConnectConnector } from 'wagmi/connectors/walletConnect'\n \nconst connector = new WalletConnectConnector({\n  options: {\n    projectId: '...',\n    metadata: {\n      name: 'wagmi',\n      description: 'my wagmi app',\n      url: 'https://wagmi.sh',\n      icons: ['https://wagmi.sh/icon.png'],\n    },\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}