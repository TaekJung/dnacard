{"ast":null,"code":"import { Connector, __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-W65LBPLT.js\";\n\n// src/walletConnect.ts\nimport { normalizeNamespaces } from \"@walletconnect/utils\";\nimport { SwitchChainError, UserRejectedRequestError, createWalletClient, custom, getAddress, numberToHex } from \"viem\";\nvar NAMESPACE = \"eip155\";\nvar STORE_KEY = \"store\";\nvar REQUESTED_CHAINS_KEY = \"requestedChains\";\nvar ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nvar _provider, _initProviderPromise, _createProvider, createProvider_fn, _initProvider, initProvider_fn, _isChainsStale, isChainsStale_fn, _setupListeners, setupListeners_fn, _removeListeners, removeListeners_fn, _setRequestedChainsIds, setRequestedChainsIds_fn, _getRequestedChainsIds, getRequestedChainsIds_fn, _getNamespaceChainsIds, getNamespaceChainsIds_fn, _getNamespaceMethods, getNamespaceMethods_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super({\n      ...config,\n      options: {\n        isNewChainsStale: true,\n        ...config.options\n      }\n    });\n    __privateAdd(this, _createProvider);\n    __privateAdd(this, _initProvider);\n    __privateAdd(this, _isChainsStale);\n    __privateAdd(this, _setupListeners);\n    __privateAdd(this, _removeListeners);\n    __privateAdd(this, _setRequestedChainsIds);\n    __privateAdd(this, _getRequestedChainsIds);\n    __privateAdd(this, _getNamespaceChainsIds);\n    __privateAdd(this, _getNamespaceMethods);\n    this.id = \"walletConnect\";\n    this.name = \"WalletConnect\";\n    this.ready = true;\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initProviderPromise, void 0);\n    this.onAccountsChanged = accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    };\n    this.onChainChanged = chainId => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    };\n    this.onDisconnect = () => {\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n      this.emit(\"disconnect\");\n    };\n    this.onDisplayUri = uri => {\n      this.emit(\"message\", {\n        type: \"display_uri\",\n        data: uri\n      });\n    };\n    this.onConnect = () => {\n      this.emit(\"connect\", {});\n    };\n    __privateMethod(this, _createProvider, createProvider_fn).call(this);\n  }\n  async connect({\n    chainId,\n    pairingTopic\n  } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(STORE_KEY);\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;else targetChainId = this.chains[0]?.id;\n      }\n      if (!targetChainId) throw new Error(\"No chains found on connector.\");\n      const provider = await this.getProvider();\n      __privateMethod(this, _setupListeners, setupListeners_fn).call(this);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (provider.session && isChainsStale) await provider.disconnect();\n      if (!provider.session || isChainsStale) {\n        const optionalChains = this.chains.filter(chain => chain.id !== targetChainId).map(optionalChain => optionalChain.id);\n        this.emit(\"message\", {\n          type: \"connecting\"\n        });\n        await provider.connect({\n          pairingTopic,\n          chains: [targetChainId],\n          optionalChains: optionalChains.length ? optionalChains : void 0\n        });\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, this.chains.map(({\n          id: id2\n        }) => id2));\n      }\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        }\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message)) throw error;\n    } finally {\n      __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n    }\n  }\n  async getAccount() {\n    const {\n      accounts\n    } = await this.getProvider();\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const {\n      chainId\n    } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider({\n    chainId\n  } = {}) {\n    if (!__privateGet(this, _provider)) await __privateMethod(this, _createProvider, createProvider_fn).call(this);\n    if (chainId) await this.switchChain(chainId);\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    const chain = this.chains.find(x => x.id === chainId);\n    if (!provider) throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([this.getAccount(), this.getProvider()]);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (!account) return false;\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {}\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find(chain2 => chain2.id === chainId);\n    if (!chain) throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n      const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [{\n            chainId: numberToHex(chain.id),\n            blockExplorerUrls: [chain.blockExplorers?.default?.url],\n            chainName: chain.name,\n            nativeCurrency: chain.nativeCurrency,\n            rpcUrls: [...chain.rpcUrls.default.http]\n          }]\n        });\n        const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n        requestedChains.push(chainId);\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: numberToHex(chainId)\n        }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n};\n_provider = new WeakMap();\n_initProviderPromise = new WeakMap();\n_createProvider = new WeakSet();\ncreateProvider_fn = async function () {\n  if (!__privateGet(this, _initProviderPromise) && typeof window !== \"undefined\") {\n    __privateSet(this, _initProviderPromise, __privateMethod(this, _initProvider, initProvider_fn).call(this));\n  }\n  return __privateGet(this, _initProviderPromise);\n};\n_initProvider = new WeakSet();\ninitProvider_fn = async function () {\n  const {\n    EthereumProvider,\n    OPTIONAL_EVENTS,\n    OPTIONAL_METHODS\n  } = await import(\"@walletconnect/ethereum-provider\");\n  const [defaultChain, ...optionalChains] = this.chains.map(({\n    id\n  }) => id);\n  if (defaultChain) {\n    const {\n      projectId,\n      showQrModal = true,\n      qrModalOptions,\n      metadata,\n      relayUrl\n    } = this.options;\n    __privateSet(this, _provider, await EthereumProvider.init({\n      showQrModal,\n      qrModalOptions,\n      projectId,\n      optionalMethods: OPTIONAL_METHODS,\n      optionalEvents: OPTIONAL_EVENTS,\n      chains: [defaultChain],\n      optionalChains: optionalChains.length ? optionalChains : void 0,\n      rpcMap: Object.fromEntries(this.chains.map(chain => [chain.id, chain.rpcUrls.default.http[0]])),\n      metadata,\n      relayUrl\n    }));\n  }\n};\n_isChainsStale = new WeakSet();\nisChainsStale_fn = function () {\n  const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) return false;\n  if (!this.options.isNewChainsStale) return false;\n  const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n  const connectorChains = this.chains.map(({\n    id\n  }) => id);\n  const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n  if (namespaceChains.length && !namespaceChains.some(id => connectorChains.includes(id))) return false;\n  return !connectorChains.every(id => requestedChains.includes(id));\n};\n_setupListeners = new WeakSet();\nsetupListeners_fn = function () {\n  if (!__privateGet(this, _provider)) return;\n  __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n  __privateGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).on(\"connect\", this.onConnect);\n};\n_removeListeners = new WeakSet();\nremoveListeners_fn = function () {\n  if (!__privateGet(this, _provider)) return;\n  __privateGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).removeListener(\"connect\", this.onConnect);\n};\n_setRequestedChainsIds = new WeakSet();\nsetRequestedChainsIds_fn = function (chains) {\n  this.storage?.setItem(REQUESTED_CHAINS_KEY, chains);\n};\n_getRequestedChainsIds = new WeakSet();\ngetRequestedChainsIds_fn = function () {\n  return this.storage?.getItem(REQUESTED_CHAINS_KEY) ?? [];\n};\n_getNamespaceChainsIds = new WeakSet();\ngetNamespaceChainsIds_fn = function () {\n  if (!__privateGet(this, _provider)) return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces) return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const chainIds = normalizedNamespaces[NAMESPACE]?.chains?.map(chain => parseInt(chain.split(\":\")[1] || \"\"));\n  return chainIds ?? [];\n};\n_getNamespaceMethods = new WeakSet();\ngetNamespaceMethods_fn = function () {\n  if (!__privateGet(this, _provider)) return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces) return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const methods = normalizedNamespaces[NAMESPACE]?.methods;\n  return methods ?? [];\n};\nexport { WalletConnectConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateMethod","__privateSet","normalizeNamespaces","SwitchChainError","UserRejectedRequestError","createWalletClient","custom","getAddress","numberToHex","NAMESPACE","STORE_KEY","REQUESTED_CHAINS_KEY","ADD_ETH_CHAIN_METHOD","_provider","_initProviderPromise","_createProvider","createProvider_fn","_initProvider","initProvider_fn","_isChainsStale","isChainsStale_fn","_setupListeners","setupListeners_fn","_removeListeners","removeListeners_fn","_setRequestedChainsIds","setRequestedChainsIds_fn","_getRequestedChainsIds","getRequestedChainsIds_fn","_getNamespaceChainsIds","getNamespaceChainsIds_fn","_getNamespaceMethods","getNamespaceMethods_fn","WalletConnectConnector","constructor","config","options","isNewChainsStale","id","name","ready","onAccountsChanged","accounts","length","emit","account","onChainChanged","chainId","Number","unsupported","isChainUnsupported","chain","onDisconnect","call","onDisplayUri","uri","type","data","onConnect","connect","pairingTopic","targetChainId","store","storage","getItem","lastUsedChainId","state","chains","Error","provider","getProvider","isChainsStale","session","disconnect","optionalChains","filter","map","optionalChain","id2","enable","getChainId","error","test","message","getAccount","switchChain","getWalletClient","Promise","all","find","x","transport","isAuthorized","chain2","namespaceChains","namespaceMethods","isChainApproved","includes","request","method","params","blockExplorerUrls","blockExplorers","default","url","chainName","nativeCurrency","rpcUrls","http","requestedChains","push","WeakMap","WeakSet","window","EthereumProvider","OPTIONAL_EVENTS","OPTIONAL_METHODS","defaultChain","projectId","showQrModal","qrModalOptions","metadata","relayUrl","init","optionalMethods","optionalEvents","rpcMap","Object","fromEntries","connectorChains","some","every","on","removeListener","setItem","namespaces","normalizedNamespaces","chainIds","parseInt","split","methods"],"sources":["/Users/KTJ/blockV/bv_connect_contract_frontend/node_modules/@wagmi/connectors/dist/walletConnect.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/walletConnect.ts\nimport { normalizeNamespaces } from \"@walletconnect/utils\";\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  createWalletClient,\n  custom,\n  getAddress,\n  numberToHex\n} from \"viem\";\nvar NAMESPACE = \"eip155\";\nvar STORE_KEY = \"store\";\nvar REQUESTED_CHAINS_KEY = \"requestedChains\";\nvar ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nvar _provider, _initProviderPromise, _createProvider, createProvider_fn, _initProvider, initProvider_fn, _isChainsStale, isChainsStale_fn, _setupListeners, setupListeners_fn, _removeListeners, removeListeners_fn, _setRequestedChainsIds, setRequestedChainsIds_fn, _getRequestedChainsIds, getRequestedChainsIds_fn, _getNamespaceChainsIds, getNamespaceChainsIds_fn, _getNamespaceMethods, getNamespaceMethods_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super({\n      ...config,\n      options: { isNewChainsStale: true, ...config.options }\n    });\n    __privateAdd(this, _createProvider);\n    __privateAdd(this, _initProvider);\n    __privateAdd(this, _isChainsStale);\n    __privateAdd(this, _setupListeners);\n    __privateAdd(this, _removeListeners);\n    __privateAdd(this, _setRequestedChainsIds);\n    __privateAdd(this, _getRequestedChainsIds);\n    __privateAdd(this, _getNamespaceChainsIds);\n    __privateAdd(this, _getNamespaceMethods);\n    this.id = \"walletConnect\";\n    this.name = \"WalletConnect\";\n    this.ready = true;\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initProviderPromise, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n      this.emit(\"disconnect\");\n    };\n    this.onDisplayUri = (uri) => {\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\n    };\n    this.onConnect = () => {\n      this.emit(\"connect\", {});\n    };\n    __privateMethod(this, _createProvider, createProvider_fn).call(this);\n  }\n  async connect({ chainId, pairingTopic } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(STORE_KEY);\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n        else\n          targetChainId = this.chains[0]?.id;\n      }\n      if (!targetChainId)\n        throw new Error(\"No chains found on connector.\");\n      const provider = await this.getProvider();\n      __privateMethod(this, _setupListeners, setupListeners_fn).call(this);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (provider.session && isChainsStale)\n        await provider.disconnect();\n      if (!provider.session || isChainsStale) {\n        const optionalChains = this.chains.filter((chain) => chain.id !== targetChainId).map((optionalChain) => optionalChain.id);\n        this.emit(\"message\", { type: \"connecting\" });\n        await provider.connect({\n          pairingTopic,\n          chains: [targetChainId],\n          optionalChains: optionalChains.length ? optionalChains : void 0\n        });\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, this.chains.map(({ id: id2 }) => id2));\n      }\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message))\n        throw error;\n    } finally {\n      __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n    }\n  }\n  async getAccount() {\n    const { accounts } = await this.getProvider();\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const { chainId } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider({ chainId } = {}) {\n    if (!__privateGet(this, _provider))\n      await __privateMethod(this, _createProvider, createProvider_fn).call(this);\n    if (chainId)\n      await this.switchChain(chainId);\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([\n        this.getAccount(),\n        this.getProvider()\n      ]);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (!account)\n        return false;\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {\n        }\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find((chain2) => chain2.id === chainId);\n    if (!chain)\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n      const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [\n            {\n              chainId: numberToHex(chain.id),\n              blockExplorerUrls: [chain.blockExplorers?.default?.url],\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [...chain.rpcUrls.default.http]\n            }\n          ]\n        });\n        const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n        requestedChains.push(chainId);\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: numberToHex(chainId) }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n};\n_provider = new WeakMap();\n_initProviderPromise = new WeakMap();\n_createProvider = new WeakSet();\ncreateProvider_fn = async function() {\n  if (!__privateGet(this, _initProviderPromise) && typeof window !== \"undefined\") {\n    __privateSet(this, _initProviderPromise, __privateMethod(this, _initProvider, initProvider_fn).call(this));\n  }\n  return __privateGet(this, _initProviderPromise);\n};\n_initProvider = new WeakSet();\ninitProvider_fn = async function() {\n  const { EthereumProvider, OPTIONAL_EVENTS, OPTIONAL_METHODS } = await import(\"@walletconnect/ethereum-provider\");\n  const [defaultChain, ...optionalChains] = this.chains.map(({ id }) => id);\n  if (defaultChain) {\n    const {\n      projectId,\n      showQrModal = true,\n      qrModalOptions,\n      metadata,\n      relayUrl\n    } = this.options;\n    __privateSet(this, _provider, await EthereumProvider.init({\n      showQrModal,\n      qrModalOptions,\n      projectId,\n      optionalMethods: OPTIONAL_METHODS,\n      optionalEvents: OPTIONAL_EVENTS,\n      chains: [defaultChain],\n      optionalChains: optionalChains.length ? optionalChains : void 0,\n      rpcMap: Object.fromEntries(\n        this.chains.map((chain) => [\n          chain.id,\n          chain.rpcUrls.default.http[0]\n        ])\n      ),\n      metadata,\n      relayUrl\n    }));\n  }\n};\n_isChainsStale = new WeakSet();\nisChainsStale_fn = function() {\n  const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD))\n    return false;\n  if (!this.options.isNewChainsStale)\n    return false;\n  const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n  const connectorChains = this.chains.map(({ id }) => id);\n  const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n  if (namespaceChains.length && !namespaceChains.some((id) => connectorChains.includes(id)))\n    return false;\n  return !connectorChains.every((id) => requestedChains.includes(id));\n};\n_setupListeners = new WeakSet();\nsetupListeners_fn = function() {\n  if (!__privateGet(this, _provider))\n    return;\n  __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n  __privateGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).on(\"connect\", this.onConnect);\n};\n_removeListeners = new WeakSet();\nremoveListeners_fn = function() {\n  if (!__privateGet(this, _provider))\n    return;\n  __privateGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).removeListener(\"connect\", this.onConnect);\n};\n_setRequestedChainsIds = new WeakSet();\nsetRequestedChainsIds_fn = function(chains) {\n  this.storage?.setItem(REQUESTED_CHAINS_KEY, chains);\n};\n_getRequestedChainsIds = new WeakSet();\ngetRequestedChainsIds_fn = function() {\n  return this.storage?.getItem(REQUESTED_CHAINS_KEY) ?? [];\n};\n_getNamespaceChainsIds = new WeakSet();\ngetNamespaceChainsIds_fn = function() {\n  if (!__privateGet(this, _provider))\n    return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const chainIds = normalizedNamespaces[NAMESPACE]?.chains?.map(\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\n  );\n  return chainIds ?? [];\n};\n_getNamespaceMethods = new WeakSet();\ngetNamespaceMethods_fn = function() {\n  if (!__privateGet(this, _provider))\n    return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const methods = normalizedNamespaces[NAMESPACE]?.methods;\n  return methods ?? [];\n};\nexport {\n  WalletConnectConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}